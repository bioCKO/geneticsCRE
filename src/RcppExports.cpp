// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// JoinIndicesMethod1
List JoinIndicesMethod1(IntegerVector counts_neg1, IntegerVector cols_neg1, IntegerVector counts_pos1, IntegerVector cols_pos1, IntegerVector counts_conflict1, IntegerVector cols_conflict1, IntegerVector counts_neg2, IntegerVector cols_neg2, IntegerVector locations_neg2, IntegerVector counts_pos2, IntegerVector cols_pos2, IntegerVector locations_pos2, IntegerVector counts_conflict2, IntegerVector cols_conflict2, IntegerVector locations_conflict2, IntegerVector srcuid, IntegerVector trguids2, List uids_CountLoc, IntegerVector joining_gene_sign, NumericMatrix ValueTable, NumericMatrix queues4init, int nCases, int nControls, int K, int iterations, IntegerMatrix CaseORControl, int method, int pathLength, int nthreads);
RcppExport SEXP geneticsCRE_JoinIndicesMethod1(SEXP counts_neg1SEXP, SEXP cols_neg1SEXP, SEXP counts_pos1SEXP, SEXP cols_pos1SEXP, SEXP counts_conflict1SEXP, SEXP cols_conflict1SEXP, SEXP counts_neg2SEXP, SEXP cols_neg2SEXP, SEXP locations_neg2SEXP, SEXP counts_pos2SEXP, SEXP cols_pos2SEXP, SEXP locations_pos2SEXP, SEXP counts_conflict2SEXP, SEXP cols_conflict2SEXP, SEXP locations_conflict2SEXP, SEXP srcuidSEXP, SEXP trguids2SEXP, SEXP uids_CountLocSEXP, SEXP joining_gene_signSEXP, SEXP ValueTableSEXP, SEXP queues4initSEXP, SEXP nCasesSEXP, SEXP nControlsSEXP, SEXP KSEXP, SEXP iterationsSEXP, SEXP CaseORControlSEXP, SEXP methodSEXP, SEXP pathLengthSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type counts_neg1(counts_neg1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_neg1(cols_neg1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_pos1(counts_pos1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_pos1(cols_pos1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_conflict1(counts_conflict1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_conflict1(cols_conflict1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_neg2(counts_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_neg2(cols_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_neg2(locations_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_pos2(counts_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_pos2(cols_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_pos2(locations_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_conflict2(counts_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_conflict2(cols_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_conflict2(locations_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type srcuid(srcuidSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type trguids2(trguids2SEXP);
    Rcpp::traits::input_parameter< List >::type uids_CountLoc(uids_CountLocSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type joining_gene_sign(joining_gene_signSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ValueTable(ValueTableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type queues4init(queues4initSEXP);
    Rcpp::traits::input_parameter< int >::type nCases(nCasesSEXP);
    Rcpp::traits::input_parameter< int >::type nControls(nControlsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type CaseORControl(CaseORControlSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type pathLength(pathLengthSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(JoinIndicesMethod1(counts_neg1, cols_neg1, counts_pos1, cols_pos1, counts_conflict1, cols_conflict1, counts_neg2, cols_neg2, locations_neg2, counts_pos2, cols_pos2, locations_pos2, counts_conflict2, cols_conflict2, locations_conflict2, srcuid, trguids2, uids_CountLoc, joining_gene_sign, ValueTable, queues4init, nCases, nControls, K, iterations, CaseORControl, method, pathLength, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// JoinIndicesMethod2
List JoinIndicesMethod2(IntegerVector counts_neg1, IntegerVector cols_neg1, IntegerVector counts_pos1, IntegerVector cols_pos1, IntegerVector counts_conflict1, IntegerVector cols_conflict1, IntegerVector counts_neg2, IntegerVector cols_neg2, IntegerVector locations_neg2, IntegerVector counts_pos2, IntegerVector cols_pos2, IntegerVector locations_pos2, IntegerVector counts_conflict2, IntegerVector cols_conflict2, IntegerVector locations_conflict2, IntegerVector srcuid, IntegerVector trguids2, List uids_CountLoc, IntegerVector joining_gene_sign, NumericMatrix ValueTable, NumericMatrix queues4init, int nCases, int nControls, int K, int iterations, IntegerMatrix CaseORControl, int method, int pathLength, int nthreads);
RcppExport SEXP geneticsCRE_JoinIndicesMethod2(SEXP counts_neg1SEXP, SEXP cols_neg1SEXP, SEXP counts_pos1SEXP, SEXP cols_pos1SEXP, SEXP counts_conflict1SEXP, SEXP cols_conflict1SEXP, SEXP counts_neg2SEXP, SEXP cols_neg2SEXP, SEXP locations_neg2SEXP, SEXP counts_pos2SEXP, SEXP cols_pos2SEXP, SEXP locations_pos2SEXP, SEXP counts_conflict2SEXP, SEXP cols_conflict2SEXP, SEXP locations_conflict2SEXP, SEXP srcuidSEXP, SEXP trguids2SEXP, SEXP uids_CountLocSEXP, SEXP joining_gene_signSEXP, SEXP ValueTableSEXP, SEXP queues4initSEXP, SEXP nCasesSEXP, SEXP nControlsSEXP, SEXP KSEXP, SEXP iterationsSEXP, SEXP CaseORControlSEXP, SEXP methodSEXP, SEXP pathLengthSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type counts_neg1(counts_neg1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_neg1(cols_neg1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_pos1(counts_pos1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_pos1(cols_pos1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_conflict1(counts_conflict1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_conflict1(cols_conflict1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_neg2(counts_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_neg2(cols_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_neg2(locations_neg2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_pos2(counts_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_pos2(cols_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_pos2(locations_pos2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type counts_conflict2(counts_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cols_conflict2(cols_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type locations_conflict2(locations_conflict2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type srcuid(srcuidSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type trguids2(trguids2SEXP);
    Rcpp::traits::input_parameter< List >::type uids_CountLoc(uids_CountLocSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type joining_gene_sign(joining_gene_signSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ValueTable(ValueTableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type queues4init(queues4initSEXP);
    Rcpp::traits::input_parameter< int >::type nCases(nCasesSEXP);
    Rcpp::traits::input_parameter< int >::type nControls(nControlsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type CaseORControl(CaseORControlSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type pathLength(pathLengthSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(JoinIndicesMethod2(counts_neg1, cols_neg1, counts_pos1, cols_pos1, counts_conflict1, cols_conflict1, counts_neg2, cols_neg2, locations_neg2, counts_pos2, cols_pos2, locations_pos2, counts_conflict2, cols_conflict2, locations_conflict2, srcuid, trguids2, uids_CountLoc, joining_gene_sign, ValueTable, queues4init, nCases, nControls, K, iterations, CaseORControl, method, pathLength, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// getMatchingList
Rcpp::List getMatchingList(Rcpp::IntegerVector uids, Rcpp::IntegerVector counts, Rcpp::IntegerVector location);
RcppExport SEXP geneticsCRE_getMatchingList(SEXP uidsSEXP, SEXP countsSEXP, SEXP locationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type uids(uidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type location(locationSEXP);
    rcpp_result_gen = Rcpp::wrap(getMatchingList(uids, counts, location));
    return rcpp_result_gen;
END_RCPP
}
