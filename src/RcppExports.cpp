// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "geneticsCRE_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// createPathSet
XPtr<paths_type> createPathSet(IntegerMatrix& data, int num_cases, int num_controls, std::string method);
RcppExport SEXP geneticsCRE_createPathSet(SEXP dataSEXP, SEXP num_casesSEXP, SEXP num_controlsSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type num_cases(num_casesSEXP);
    Rcpp::traits::input_parameter< int >::type num_controls(num_controlsSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(createPathSet(data, num_cases, num_controls, method));
    return rcpp_result_gen;
END_RCPP
}
// createEmptyPathSet
XPtr<paths_type> createEmptyPathSet(std::string method);
RcppExport SEXP geneticsCRE_createEmptyPathSet(SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(createEmptyPathSet(method));
    return rcpp_result_gen;
END_RCPP
}
// getMatchingList
List getMatchingList(IntegerVector& uids, IntegerVector& counts, IntegerVector& location);
RcppExport SEXP geneticsCRE_getMatchingList(SEXP uidsSEXP, SEXP countsSEXP, SEXP locationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector& >::type uids(uidsSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type location(locationSEXP);
    rcpp_result_gen = Rcpp::wrap(getMatchingList(uids, counts, location));
    return rcpp_result_gen;
END_RCPP
}
// JoinIndices
List JoinIndices(IntegerVector r_src_uids, IntegerVector r_trg_uids, List uids_CountLoc, IntegerVector r_join_gene_signs, NumericMatrix r_value_table, int num_cases, int num_controls, int K, int iterations, IntegerMatrix r_case_mask, std::string method, int pathLength, int nthreads, SEXP xp_paths0, SEXP xp_paths1, SEXP xp_paths_res);
RcppExport SEXP geneticsCRE_JoinIndices(SEXP r_src_uidsSEXP, SEXP r_trg_uidsSEXP, SEXP uids_CountLocSEXP, SEXP r_join_gene_signsSEXP, SEXP r_value_tableSEXP, SEXP num_casesSEXP, SEXP num_controlsSEXP, SEXP KSEXP, SEXP iterationsSEXP, SEXP r_case_maskSEXP, SEXP methodSEXP, SEXP pathLengthSEXP, SEXP nthreadsSEXP, SEXP xp_paths0SEXP, SEXP xp_paths1SEXP, SEXP xp_paths_resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type r_src_uids(r_src_uidsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r_trg_uids(r_trg_uidsSEXP);
    Rcpp::traits::input_parameter< List >::type uids_CountLoc(uids_CountLocSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type r_join_gene_signs(r_join_gene_signsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type r_value_table(r_value_tableSEXP);
    Rcpp::traits::input_parameter< int >::type num_cases(num_casesSEXP);
    Rcpp::traits::input_parameter< int >::type num_controls(num_controlsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type r_case_mask(r_case_maskSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type pathLength(pathLengthSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xp_paths0(xp_paths0SEXP);
    Rcpp::traits::input_parameter< SEXP >::type xp_paths1(xp_paths1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type xp_paths_res(xp_paths_resSEXP);
    rcpp_result_gen = Rcpp::wrap(JoinIndices(r_src_uids, r_trg_uids, uids_CountLoc, r_join_gene_signs, r_value_table, num_cases, num_controls, K, iterations, r_case_mask, method, pathLength, nthreads, xp_paths0, xp_paths1, xp_paths_res));
    return rcpp_result_gen;
END_RCPP
}
